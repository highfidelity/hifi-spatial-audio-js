name: Run-Jest-Tests

on:
  workflow_dispatch:
    inputs:
      stackname:
        description: "Host name, i.e. 'api', `api-hobby-latest`, or 'api-pro'"
        required: true
        default: api-staging-latest
  push:
    branches:
      - main
      - release
      
  pull_request_target:
    branches:
      - main
      - release
 

jobs:
  Run-Jest-Tests:
    runs-on: ubuntu-latest
    if: github.event.pusher.name != 'hifibuild'

    steps:
      - name: View Commit Author
        run: echo "The last push was made by a user named ${{ github.event.pusher.name }}."
      
      - uses: actions/checkout@v2
    
      - uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install Modules
        run: npm i

      # Run unit tests
      - name: Run Jest Unit Tests
        shell: bash
        run: |
          ./node_modules/.bin/jest unit --ci --useStderr 2>&1 | tee testoutput
          ./testfails.sh

     # Run integration tests
      - name: Decrypt auth file
        if: always()
        run: ./.github/scripts/decryptAuthFile.sh
        env:
          TESTING_AUTH_DECRYPTION_KEY: ${{ secrets.TESTING_AUTH_DECRYPTION_KEY }}
          STACKNAME: ${{ github.event.inputs.stackname || 'api-staging-latest' }}
        
      - name: Run Jest Integration Tests
        if: always()
        shell: bash
        run: |
          ./node_modules/.bin/jest integration --ci --useStderr 2>&1 | tee testoutput
          ./testfails.sh

      # Final testing status for repo
      - name: All Tests Passed
        if: success()
        run: |
          curl --request POST --url https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }} --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' --header 'content-type: application/json' --data '{ "context": "tests", "state": "success", "description": "Tests passed", "target_url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" }'

      - name: Any Test Failed
        if: failure()
        run: |
          curl --request POST --url https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }} --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' --header 'content-type: application/json' --data '{ "context": "tests", "state": "failure", "description": "Tests failed", "target_url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" }'
